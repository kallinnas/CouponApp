// <auto-generated />
using System;
using CouponSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CouponApp.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240722075019_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CouponApp.Model.CustomerCoupon", b =>
                {
                    b.Property<long>("CouponId")
                        .HasColumnType("bigint")
                        .HasColumnName("coupon_id");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customer_id");

                    b.HasKey("CouponId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("customer_coupon", (string)null);
                });

            modelBuilder.Entity("CouponSystem.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("clients");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("CouponSystem.Models.Coupon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("company_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("company_id");

                    b.ToTable("coupons");
                });

            modelBuilder.Entity("CouponSystem.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("client_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique()
                        .HasFilter("[client_id] IS NOT NULL");

                    b.ToTable("users");
                });

            modelBuilder.Entity("CouponSystem.Models.Company", b =>
                {
                    b.HasBaseType("CouponSystem.Models.Client");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("companies", (string)null);
                });

            modelBuilder.Entity("CouponSystem.Models.Customer", b =>
                {
                    b.HasBaseType("CouponSystem.Models.Client");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("CouponApp.Model.CustomerCoupon", b =>
                {
                    b.HasOne("CouponSystem.Models.Coupon", "Coupon")
                        .WithMany("CustomerCoupons")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CouponSystem.Models.Customer", "Customer")
                        .WithMany("CustomerCoupons")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CouponSystem.Models.Coupon", b =>
                {
                    b.HasOne("CouponSystem.Models.Company", "Company")
                        .WithMany("Coupons")
                        .HasForeignKey("company_id");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CouponSystem.Models.User", b =>
                {
                    b.HasOne("CouponSystem.Models.Client", "Client")
                        .WithOne("User")
                        .HasForeignKey("CouponSystem.Models.User", "ClientId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CouponSystem.Models.Company", b =>
                {
                    b.HasOne("CouponSystem.Models.Client", null)
                        .WithOne()
                        .HasForeignKey("CouponSystem.Models.Company", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CouponSystem.Models.Customer", b =>
                {
                    b.HasOne("CouponSystem.Models.Client", null)
                        .WithOne()
                        .HasForeignKey("CouponSystem.Models.Customer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CouponSystem.Models.Client", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("CouponSystem.Models.Coupon", b =>
                {
                    b.Navigation("CustomerCoupons");
                });

            modelBuilder.Entity("CouponSystem.Models.Company", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("CouponSystem.Models.Customer", b =>
                {
                    b.Navigation("CustomerCoupons");
                });
#pragma warning restore 612, 618
        }
    }
}
